{
  "hash": "af058a97284bb54e78e0023400075d82",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Alt NHL Draft\"\ndraft: true\neval: false\n---\n\n\nTesting that idea.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnhl_data <- read.csv(\"NHL2023.csv\") %>%\n  rename(goals_home = G,\n         goals_visiting = 'G.1',\n         overtime = X)\n\n\n# Assuming your dataframe is named 'nhl_data'\nresult <- nhl_data %>%\n  # Create a new column 'points_home' based on the game outcome for the home team\n  mutate(points_home = case_when(\n    goals_home > goals_visiting ~ 2,\n    goals_home < goals_visiting & overtime == TRUE ~ 1,\n    TRUE ~ 0\n  )) %>%\n  # Create a new column 'points_visiting' based on the game outcome for the visiting team\n  mutate(points_visiting = case_when(\n    goals_visiting > goals_home ~ 2,\n    goals_visiting < goals_home & overtime == TRUE ~ 1,\n    TRUE ~ 0\n  )) \n\nlonger <- result %>%\n   pivot_longer(cols = c(Home, Visitor), names_to = \"team_type\", values_to = \"team\") %>%\n  # Join the points columns based on the team type\n  left_join(\n    pivot_longer(., cols = c(points_home, points_visiting), names_to = \"points_type\", values_to = \"points\"),\n    by = c(\"team_type\" = \"points_type\")\n  ) %>%\n  # Remove unnecessary columns\n  select(Date, team, points) %>%\n  # Group by team and game date\n  group_by(team, Date) %>%\n  # Sum the points for each team and game date\n  summarize(points = sum(points)) %>%\n  # Calculate the cumulative sum of points for each team over the course of the season\n  arrange(team, Date) %>%\n  group_by(team) %>%\n  mutate(total_points = cumsum(points))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assuming your dataframe is named nhl_data\n# It has columns: game_date, home_team, visiting_team, home_goals, visiting_goals, overtime (logical)\n\n# Step 1: Reshape the data\nnhl_long <- nhl_data %>%\n  mutate(game_id = row_number()) %>%  # Create a unique game identifier\n  pivot_longer(cols = c(Home, Visitor),\n               names_to = \"home_or_visitor\",\n               values_to = \"team\") %>%\n  mutate(team_goals = if_else(home_or_visitor == \"Home\", goals_home, goals_visiting),\n         opponent_goals = if_else(home_or_visitor == \"Home\", goals_visiting, goals_home)) %>%\n  select(-home_or_visitor, -goals_home, -goals_visiting)\n\n# Step 2: Calculate points per game\nnhl_points <- nhl_long %>%\n  mutate(points = case_when(\n    team_goals > opponent_goals & is.na(overtime) ~ 2,  # Win without overtime\n    team_goals > opponent_goals & !is.na(overtime) ~ 2, # Win with overtime\n    team_goals < opponent_goals & !is.na(overtime) ~ 1, # Loss in overtime\n    TRUE ~ 0  # Regular loss\n  )) %>%\n  select(Date, team, points)\n\n# Step 3: Summarize points by team and date\nnhl_cumulative_points <- nhl_points %>%\n  group_by(team) %>%\n  arrange(team, Date) %>%\n  mutate(cumulative_points = cumsum(points)) %>%\n  select(team, Date, cumulative_points)\n\n# View the result\nnhl_cumulative_points\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}