{
  "hash": "a6b68ecd1958132300f7204ea9babf02",
  "result": {
    "markdown": "---\ntitle: \"Example 1: Grant Expenditures\"\ndate: \"2024-01-12\"\nformat:\n  html:\n    code-fold: true\ncategories: [Tutorial, Quarto, Literate Programming, Plotly, Interactive]\nimage: grantvis.png\n\n\n---\n\n![](grantvis.png)\n## Aggregating financial data for a grant\n\nThis is for my NIH grant and it uses the transaction detail report.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\nlibrary(plotly)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n```\n:::\n\n```{.r .cell-code}\nSEPA <- read.csv(\"SEPA.csv\")\n\nSEPAsmall <- SEPA %>%\n  select(Transaction.Date, Transaction.Type, PE, PE.Title,\n         Original.Budget, YTD, Encumbrance, Adjusted.Budget)%>%\n  filter(PE != \"RV\")%>%\n  mutate(Category = if_else(PE == 60, \"F&A\", \"Direct\"))%>%\n  mutate(date = mdy(Transaction.Date),\n         month = month(date))%>%\n  group_by(Category, month)%>%\n  summarise(Total = sum(YTD))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Category'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\np <- plot_ly(SEPAsmall, x = ~month, y = ~Total, color = ~Category, type = 'bar') %>%\n  layout(barmode = 'stack')\n\np\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): minimal value for n is 3, returning requested palette with 3 different levels\n\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): minimal value for n is 3, returning requested palette with 3 different levels\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-161a18982572ba591b1b\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-161a18982572ba591b1b\">{\"x\":{\"visdat\":{\"9ca346d296c\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"9ca346d296c\",\"attrs\":{\"9ca346d296c\":{\"x\":{},\"y\":{},\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"barmode\":\"stack\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"month\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Total\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1,8,9,10,11,12],\"y\":[2243.21,6980.3999999999996,3914.2599999999998,6380.5500000000002,4237.6199999999999,12301.52],\"type\":\"bar\",\"name\":\"Direct\",\"marker\":{\"color\":\"rgba(102,194,165,1)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,1)\"},\"error_y\":{\"color\":\"rgba(102,194,165,1)\"},\"error_x\":{\"color\":\"rgba(102,194,165,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[1,8,9,10,11,12],\"y\":[179.46000000000001,558.42999999999995,-195.19,510.43000000000001,339.01999999999998,984.13],\"type\":\"bar\",\"name\":\"F&A\",\"marker\":{\"color\":\"rgba(141,160,203,1)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,1)\"},\"error_y\":{\"color\":\"rgba(141,160,203,1)\"},\"error_x\":{\"color\":\"rgba(141,160,203,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.2/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}